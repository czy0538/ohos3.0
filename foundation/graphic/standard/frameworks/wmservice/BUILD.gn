# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

## Build libwmservice.so {{{
config("libwmservice_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "include",
    "//utils/system/safwk/native/include",
  ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
  ]
}

config("libwmservice_public_config") {
  include_dirs = [
    "//foundation/graphic/standard/interfaces/innerkits/common",
    "//foundation/graphic/standard/interfaces/innerkits/wmclient",
    "//foundation/graphic/standard/interfaces/innerkits/wmservice",
  ]
}

ohos_shared_library("libwmservice") {
  sources = [
    "src/window_manager_service_client.cpp",
    "src/window_manager_service_client_impl.cpp",
    "src/window_manager_service_proxy.cpp",
  ]

  configs = [ ":libwmservice_config" ]

  public_configs = [ ":libwmservice_public_config" ]

  deps = [
    "//base/hiviewdfx/hilog/interfaces/native/innerkits:libhilog",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "//foundation/graphic/standard/frameworks/wmserver:wms_protocol",
    "//third_party/wayland_standard:libwayland_client",
  ]

  public_deps = [
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core:ipc_core",
    "//foundation/graphic/standard/utils:promise",
    "//utils/native/base:utils",
  ]

  part_name = "graphic_standard"
  subsystem_name = "graphic"
}

## Build libwmservice.so }}}

## Build wmservice_test {{{
config("wmservice_test_config") {
  visibility = [ ":*" ]

  include_dirs = []

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
  ]
}

ohos_executable("wmservice_test") {
  install_enable = false

  sources = [ "src/main.cpp" ]

  configs = [ ":wmservice_test_config" ]

  deps = [ ":libwmservice" ]

  part_name = "graphic_standard"
  subsystem_name = "graphic"
}
## Build wmservice_test }}}
