# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

config("audio_policy_public_config") {
  include_dirs = [
    "//foundation/multimedia/audio_standard/services/include",
    "//foundation/multimedia/audio_standard/services/include/client",
    "//foundation/distributedschedule/safwk/services/safwk/include",
    "//foundation/multimedia/audio_standard/frameworks/innerkitsimpl/common/include",
    "//foundation/multimedia/audio_standard/interfaces/innerkits/native/audiocommon/include",
    "//foundation/multimedia/audio_standard/interfaces/innerkits/native/audiopolicy/include",
    "//foundation/multimedia/audio_standard/interfaces/innerkits/native/audiomanager/include",
    "//foundation/multimedia/audio_standard/services/src/audio_policy/server/service/common",
    "//foundation/multimedia/audio_standard/services/src/audio_policy/server/service/interface",
    "//foundation/multimedia/audio_standard/services/src/audio_policy/server/service/manager",
    "//foundation/multimedia/audio_standard/services/src/audio_policy/server/service/config",
    "//foundation/multimedia/audio_standard/services/src/audio_policy/server/service",
    "//foundation/multimedia/audio_standard/services/include/audio_policy/common",
    "//foundation/multimedia/audio_standard/services/include/audio_policy/server",
    "//foundation/multimedia/audio_standard/services/include/audio_policy/client",
    "//foundation/multimedia/audio_standard/frameworks/innerkitsimpl/common/include",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core/include",
    "//foundation/multimedia/image/mock/native/include/foundation/multimedia/image/mock/native/include",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy/include",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits/include",
    "//utils/system/safwk/native/include",
    "//utils/native/base/include",
    "//third_party/bounds_checking_function/include",
  ]

  cflags = [
        "-Wall",
        "-Werror",
  ]

  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }
}

ohos_shared_library("audio_policy_client") {
  install_enable = true
  sources = [
    "//foundation/multimedia/audio_standard/services/src/audio_policy/client/audio_policy_proxy.cpp",
    "//foundation/multimedia/audio_standard/services/src/audio_policy/client/audio_policy_manager.cpp",
  ]

  public_configs = [
    ":audio_policy_public_config",
  ]

  deps = [
   "//utils/native/base:utils",
  ]

  external_deps = [
    "ipc:ipc_core",
    "samgr_L2:samgr_proxy",
    "safwk:system_ability_fwk",
    "hiviewdfx_hilog_native:libhilog",
  ]
  subsystem_name = "multimedia"
  part_name = "multimedia_audio_standard"
}

ohos_executable("audio_policy_test") {
  install_enable = false

  sources = [ "//foundation/multimedia/audio_standard/services/test/audio_policy_test.cpp" ]

    configs = [
        ":audio_policy_public_config",
    ]

    deps = [
        "//foundation/multimedia/audio_standard/interfaces/innerkits/native/audiomanager:audio_client",
        "//third_party/bounds_checking_function:libsec_static",
    ]

  external_deps = [ "hiviewdfx_hilog_native:libhilog" ]

  part_name = "multimedia_audio_standard"
  subsystem_name = "multimedia"
}
