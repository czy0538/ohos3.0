# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/multimedia/image_standard/ide/image_decode_config.gni")

ohos_shared_library("pngplugin") {
  sources = [
    "//foundation/multimedia/image_standard/plugins/common/libs/image/libpngplugin/src/nine_patch_listener.cpp",
    "//foundation/multimedia/image_standard/plugins/common/libs/image/libpngplugin/src/plugin_export.cpp",
    "//foundation/multimedia/image_standard/plugins/common/libs/image/libpngplugin/src/png_decoder.cpp",
    "//foundation/multimedia/image_standard/plugins/common/libs/image/libpngplugin/src/png_ninepatch_res.cpp",
  ]
  include_dirs = [
    "//foundation/multimedia/utils/include",
    "//foundation/multimedia/image_standard/plugins/manager/include",
    "//foundation/multimedia/image_standard/plugins/manager/include/image",
    "//foundation/multimedia/image_standard/plugins/manager/include/pluginbase",
    "//foundation/multimedia/image_standard/plugins/common/libs/image/libpngplugin/include",
    "//third_party/zlib",
    "//third_party/libpng",
    "//foundation/multimedia/image_standard/interfaces/innerkits/include",
    "//foundation/multimedia/image_standard/frameworks/innerkitsimpl/utils/include",
    "//third_party/flutter/skia/third_party/libjpeg-turbo",
  ]
  deps = [ "//third_party/zlib:libz" ]

  if (use_mingw_win) {
    defines = image_decode_windows_defines
    include_dirs += [
      "//foundation/multimedia/image_standard/mock/native/include",
      "//third_party/libpng",
    ]
    deps += [
      "//foundation/multimedia/image_standard/mock/native:log_mock_static",
      "//foundation/multimedia/image_standard/plugins/manager:pluginmanager_static",
      "//third_party/libpng:png_static",
    ]

    libs = [ "//prebuilts/mingw-w64/ohos/linux-x86_64/clang-mingw/x86_64-w64-mingw32/lib/libws2_32.a" ]
  } else if (use_clang_mac) {
    defines = image_decode_mac_defines
    include_dirs += [
      "//foundation/multimedia/image_standard/mock/native/include",
      "//third_party/libpng",
      "//utils/native/base/include",
    ]
    deps += [
      "//foundation/multimedia/image_standard/mock/native:log_mock_static",
      "//foundation/multimedia/image_standard/plugins/manager:pluginmanager_static",
      "//third_party/libpng:png_static",
      "//utils/native/base:utilsecurec",
    ]
  } else {
    defines = [ "DUAL_ADAPTER" ]
    DUAL_ADAPTER = true
    include_dirs += [
      "//utils/native/base/include",
      "//third_party/libpng",
    ]
    deps += [
      "//foundation/multimedia/image_standard/plugins/manager:pluginmanager",
      "//third_party/libpng:png_static",
      "//utils/native/base:utils",
    ]
    if (DUAL_ADAPTER) {
    } else {
      deps += [ "//third_party/libpng:libpng" ]
      include_dirs += [ "//third_party/libpng" ]
    }
    external_deps = [ "hiviewdfx_hilog_native:libhilog" ]
  }

  part_name = "multimedia_image_standard"

  subsystem_name = "multimedia"
}

ohos_prebuilt_etc("pngpluginmetadata") {
  source = "pngplugin.pluginmeta"
  relative_install_dir = "multimediaplugin/image"
  subsystem_name = "multimedia"
  part_name = "multimedia_image_standard"
}
