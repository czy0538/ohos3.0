# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/powermgr/power_manager/powermgr.gni")
import("//build/test.gni")

module_output_path = "${powermgr_native_part_name}/powermgr_native"

###############################################################################
config("module_private_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "include",
    "//utils/system/safwk/native/include",
  ]
}

deps_ex = [
  "aafwk_standard:base",
  "aafwk_standard:want",
  "appexecfwk_standard:appexecfwk_base",
  "appexecfwk_standard:libeventhandler",
  "ces_standard:cesfwk_innerkits",
  "ipc:ipc_core",
  "hiviewdfx_hilog_native:libhilog",
  "safwk:system_ability_fwk",
  "samgr_L2:samgr_proxy",
]

##############################unittest##########################################
ohos_unittest("test_running_lock") {
  module_out_path = module_output_path

  sources = [ "src/running_lock_test.cpp" ]

  configs = [
    "${powermgr_utils_path}:utils_config",
    ":module_private_config",
  ]

  deps = [
    "${powermgr_native_innerkits_path}:powermgr_client",
    "${powermgr_service_path}:powermgrservice",
    "${powermgr_service_path}/native/src/actions:powermgr_actions",
    "//third_party/googletest:gtest_main",
    "//utils/native/base:utils",
  ]

  external_deps = deps_ex
}

ohos_unittest("test_power_mgr_service") {
  module_out_path = module_output_path

  sources = [ "src/power_mgr_service_test.cpp" ]

  configs = [
    "${powermgr_utils_path}:utils_config",
    ":module_private_config",
  ]

  deps = [
    "${powermgr_native_innerkits_path}:powermgr_client",
    "${powermgr_service_path}:powermgrservice",
    "${powermgr_service_path}/native/src/actions:powermgr_actions",
    "//third_party/googletest:gtest_main",
    "//utils/native/base:utils",
  ]

  external_deps = deps_ex
}

ohos_unittest("test_power_state_machine") {
  module_out_path = module_output_path

  sources = [ "src/power_state_machine_test.cpp" ]

  configs = [
    "${powermgr_utils_path}:utils_config",
    ":module_private_config",
  ]

  deps = [
    "${powermgr_native_innerkits_path}:powermgr_client",
    "${powermgr_service_path}:powermgrservice",
    "${powermgr_service_path}/native/src/actions:powermgr_actions",
    "${powermgr_utils_path}:powermgr_utils",
    "//third_party/googletest:gtest_main",
    "//utils/native/base:utils",
  ]

  external_deps = deps_ex
}

if (false) {
  ohos_unittest("test_power_mgr_notify") {
    module_out_path = module_output_path

    sources = [ "src/power_mgr_notify_test.cpp" ]

    configs = [
      "${powermgr_utils_path}:utils_config",
      ":module_private_config",
    ]

    deps = [
      "${powermgr_native_innerkits_path}:powermgr_client",
      "${powermgr_service_path}:powermgrservice",
      "//third_party/googletest:gtest_main",
      "//utils/native/base:utils",
    ]

    external_deps = deps_ex
  }
}

group("unittest") {
  testonly = true
  deps = [
    ":test_power_mgr_service",
    ":test_power_state_machine",
    ":test_running_lock",

    #":test_power_mgr_notify",
  ]
}
