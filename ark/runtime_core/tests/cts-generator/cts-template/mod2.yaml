# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

definitions: []
tests:
  - file-name: "mod2"
    isa:
      title: Two address integer division and modulo on accumulator
      description: >
        Perform integer division or modulo on accumulator and register and store result into accumulator
      exceptions:
        - x_arith
    commands:
      - file-name: "op_vs_8_zero"
        isa:
          instructions:
            - sig: mod2 v:in:i32
              acc: inout:i32
              format: [op_v_8]
        code-template: |
          #
              ldai 0
              movi v0, %s
              mod2 v0
              movi v0, 0
              jne v0, set_failure
              ldai 0
              jmp fall_through
          set_failure:
              ldai 1
          fall_through:
        description: Check mod2 with zero and various values.
        cases:
          - values:
              - "0"
            runner-options: ['run-failure']
            description: Division by zero causes to exception.
          - values:
              - "1"
          - values:
              - "-1"
          - values:
              - "0x7FFFFFFF"
          - values:
              - "0x80000000"
          - values:
              - "-0x7FFFFFFF"
          - values:
              - "-0x80000000"
          - values:
              - "0xFFFFFFFF"
          - values:
              - "-0xFFFFFFFF"

      - file-name: "op_vs_8_pone"
        isa:
          instructions:
            - sig: mod2 v:in:i32
              acc: inout:i32
              format: [op_v_8]
        code-template: |
          #
              ldai 1
              movi v0, %s
              mod2 v0
              movi v0, %s
              jne v0, set_failure
              ldai 0
              jmp fall_through
          set_failure:
              ldai 1
          fall_through:
        description: Check mod2 with +1 and various values.
        cases:
          - values:
              - "0"
              - "0x0"
            runner-options: ['run-failure']
            description: Division by zero causes to exception.
          - values:
              - "1"
              - "0"
          - values:
              - "-1"
              - "0"
              - "0x7FFFFFFF"
              - "1"
          - values:
              - "0x80000000"
              - "1"
          - values:
              - "-0x7FFFFFFF"
              - "1"
          - values:
              - "-0x80000000"
              - "1"
          - values:
              - "0xFFFFFFFF"
              - "0"
          - values:
              - "-0xFFFFFFFF"
              - "0"

      - file-name: "op_vs_8_none"
        isa:
          instructions:
            - sig: mod2 v:in:i32
              acc: inout:i32
              format: [op_v_8]
        code-template: |
          #
              ldai -1
              movi v0, %s
              mod2 v0
              movi v0, %s
              jne v0, set_failure
              ldai 0
              jmp fall_through
          set_failure:
              ldai 1
          fall_through:
        description: Check mod2 with -1 and various values.
        cases:
          - values:
              - "0"
              - "0"
            runner-options: ['run-failure']
            description: Division by zero causes to exception.
          - values:
              - "1"
              - "0"
          - values:
              - "-1"
              - "0"
          - values:
              - "0x7FFFFFFF"
              - "-1"
          - values:
              - "0x80000000"
              - "-1"
          - values:
              - "-0x7FFFFFFF"
              - "0xFFFFFFFF"
          - values:
              - "-0x80000000"
              - "-1"
          - values:
              - "0xFFFFFFFF"
              - "0"
          - values:
              - "-0xFFFFFFFF"
              - "0"

      - file-name: "op_vs_8_pmax"
        isa:
          instructions:
            - sig: mod2 v:in:i32
              acc: inout:i32
              format: [op_v_8]
        code-template: |
          #
              ldai 0x7FFFFFFF
              movi v0, %s
              mod2 v0
              movi v0, %s
              jne v0, set_failure
              ldai 0
              jmp fall_through
          set_failure:
              ldai 1
          fall_through:
        description: Check mod2 with +max and various values.
        cases:
          - values:
              - "0"
              - "0"
            runner-options: ['run-failure']
            description: Division by zero causes to exception.
          - values:
              - "1"
              - "0"
          - values:
              - "-1"
              - "0"
          - values:
              - "0x7FFFFFFF"
              - "0"
          - values:
              - "0x80000000"
              - "0x7FFFFFFF"
          - values:
              - "-0x7FFFFFFF"
              - "0"
          - values:
              - "-0x80000000"
              - "0x7FFFFFFF"
          - values:
              - "0xFFFFFFFF"
              - "0"
          - values:
              - "-0xFFFFFFFF"
              - "0"

      - file-name: "op_vs_8_nmax"
        isa:
          instructions:
            - sig: mod2 v:in:i32
              acc: inout:i32
              format: [op_v_8]
        code-template: |
          #
              ldai -0x80000000
              movi v0, %s
              mod2 v0
              movi v0, %s
              jne v0, set_failure
              ldai 0
              jmp fall_through
          set_failure:
              ldai 1
          fall_through:
        description: Check mod2 with -max and various values.
        cases:
          - values:
              - "0"
              - "0"
            runner-options: ['run-failure']
            description: Division by zero causes to exception.
          - values:
              - "1"
              - "0"
          - values:
              - "-1"
              - "0"
          - values:
              - "0x7FFFFFFF"
              - "0xFFFFFFFF"
          - values:
              - "0x80000000"
              - "0"
          - values:
              - "-0x7FFFFFFF"
              - "-1"
          - values:
              - "-0x80000000"
              - "0"
          - values:
              - "0xFFFFFFFF"
              - "0"
          - values:
              - "-0xFFFFFFFF"
              - "0"

      - file-name: "vals"
        isa:
          instructions:
            - sig: mod2 v:in:i32
              acc: inout:i32
              format: [op_v_8]
        code-template: |
          #
              ldai %s
              movi v0, %s
              mod2 v0
              movi v0, %s
              jne v0, set_failure
              ldai 0
              jmp fall_through
          set_failure:
              ldai 1
          fall_through:
        description: Check mod2 with various values.
        tags: ['tsan']
        cases:
          - values:
              - "0x3E3DF59E"
              - "0x322AA"
              - "0x2F584"
          - values:
              - "0xF646A65A"
              - "0x1BD55"
              - "0xFFFFFC7D"
          - values:
              - "0x87401053"
              - "0xEBDD6"
              - "0xFFF25873"
          - values:
              - "0x85C0E3B6"
              - "0xAE2F3"
              - "0xFFF8BFC4"
          - values:
              - "0x5FE777B5"
              - "0x21AF6"
              - "0x16037"
          - values:
              - "0x4B743F04"
              - "0x6F4BC"
              - "0x66864"
          - values:
              - "0x3BCA351F"
              - "0x6EA69"
              - "0x1D772"
          - values:
              - "0xFE56E34"
              - "0xCF88E"
              - "0x98896"
          - values:
              - "0x1F1BE487"
              - "0x875CE"
              - "0x2DE51"
          - values:
              - "0xC43C42DC"
              - "0x3992C"
              - "0xFFFCC080"
          - values: ["0x80000000", "-1", "0"]
          - values: ["-2147483648", "-1", "0"]

      - file-name: "op_v_8_exception"
        isa:
          instructions:
            - sig: mod2 v:in:i32
              acc: inout:i32
              format: [op_v_8]
        header-template: [ArithmeticException, main]
        code-template: |
            #
                ldai %s
                movi v0, 0
            begin:
                mod2 v0
            end:
                ldai 1 # Should not reach this line
                return

            catch_AE:
                ldai 0 # Expected panda.ArithmeticException
                return

            catch_all:
                ldai 1 # Unexpected exception, test failed
                return

            .catch panda.ArithmeticException, begin, end, catch_AE
            .catchall begin, end, catch_all
        check-type: none
        description: Check `mod2` throws ArithmeticException when divides by zero.
        cases:
          - values: ["0"]
          - values: ["1"]
          - values: ["0x7FFF"]
          - values: ["0xFFFF"]
          - values: ["0x7FFFFFFF"]
          - values: ["0x80000000"]
          - values: ["0xFFFFFFFF"]
          - values: ["-1"]
          - values: ["-0x7FFF"]
          - values: ["-0xFFFF"]
          - values: ["-0x7FFFFFFF"]
          - values: ["-0x80000000"]
          - values: ["-0xFFFFFFFF"]

      - file-name: "vals_mod32_1"
        bugid: ['1324', '2072']
        tags: ['verifier']
        runner-options: ['verifier-failure', 'verifier-debug-config']
        isa:
          instructions:
            - sig: mod2 v:in:i32
              acc: inout:i32
              format: [op_v_8]
        code-template: |
          #
              ldai %s
              movi v0, %s
              mod2 v0
              movi.64 v0, %s
              cmp.64 v0
        description: Check mod2 with incorrect accumulator and register type.
        cases:
          - values:
              - "0xFFFFFFFF"
              - "2"
              - "0xFFFFFFFFFFFFFFFF"
          - values:
              - "-0x7FFFFFFF"
              - "-0x7FFFFFFE"
              - "0xFFFFFFFFFFFFFFFF"
          - values:
              - "0x80000001"
              - "2"
              - "0xFFFFFFFFFFFFFFFF"

      - file-name: "vals_mod32_2"
        bugid: ['1324']
        tags: ['verifier']
        runner-options: ['verifier-failure', 'verifier-debug-config']
        isa:
          instructions:
            - sig: mod2 v:in:i32
              acc: inout:i32
              format: [op_v_8]
        code-template: |
          #
              ldai.64 %s
              movi.64 v0, %s
              mod2 v0
              movi.64 v0, %s
              cmp.64 v0
        description: Check mod2 with incorrect accumulator and register type.
        cases:
          - values:
              - "0x180000001"
              - "0xF00000002"
              - "0xFFFFFFFFFFFFFFFF"
          - values:
              - "0x777777777FFFFFFF"
              - "0x11111111FFFFFFFE"
              - "1"
          - values:
              - "0xFEDCBA8780000001"
              - "0x1234567800000002"
              - "0xFFFFFFFFFFFFFFFF"

      - file-name: "regs"
        isa:
          instructions:
            - sig: mod2 v:in:i32
              acc: inout:i32
              format: [op_v_8]
        runner-options: ['compile-only']
        code-template: |
          #
              mod2 %s
        check-type: none
        description: Check mod2 with various register numbers.
        cases:
          - values:
              - "v255"
          - values:
              - "v256"
            runner-options: ['compile-failure']

      - file-name: "type"
        isa:
          instructions:
            - sig: mod2 v:in:i32
              acc: inout:i32
              format: [op_v_8]
          verification:
            - acc_type
            - v1_type
        tags: ['verifier']
        runner-options: ['verifier-failure', 'verifier-debug-config']
        code-template: |
          #
              %s
              %s
              mod2 v0
              ldai 0
        check-type: no-check
        description: Check mod2 with incorrect accumulator and register type.
        cases:
          - values:
              - "lda.null"
              - "movi v0, 0"
          - values:
              - "ldai 0 "
              - "mov.null v0"
          - values:
              - "lda.null"
              - "mov.null v0"
